openapi: 3.0.1
info:
  title: Lumina API
  description: API Lumina para gerenciar administradores e empresas.
  version: 1.0.0

paths:
  admins/admin/primeiro:
    post:
      summary: Adicionar o primeiro administrador
      description: Cria o primeiro administrador no sistema, caso nenhum exista.
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminInput'
      responses:
        201:
          description: Primeiro administrador criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCreatedResponse'
        400:
          description: Administrador já existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  admins/admin:
    post:
      summary: Adicionar um novo administrador
      description: Adiciona um novo administrador ao sistema. Apenas administradores autenticados podem realizar esta ação.
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminInput'
      responses:
        201:
          description: Novo administrador criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCreatedResponse'
        400:
          description: Email já está em uso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Listar empresas
      description: Retorna uma lista de todas as empresas. Apenas administradores autenticados podem realizar esta ação.
      tags:
        - Admin
      responses:
        200:
          description: Lista de empresas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpresasResponse'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  admins/admin/login:
    post:
      summary: Login de administrador
      description: Autentica um administrador e retorna um token de acesso.
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminInput'
      responses:
        200:
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminLoginResponse'
        401:
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  admins/{id}:
    get:
      summary: Buscar empresa por ID
      description: Retorna os detalhes de uma empresa com base no ID fornecido.
      tags:
        - Admin
      parameters:
        - name: id
          in: path
          description: ID da empresa
          required: true
          schema:
            type: string
      responses:
        200:
          description: Empresa encontrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpresaResponse'
        404:
          description: Empresa não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Deletar uma empresa
      description: Remove uma empresa do sistema. Apenas administradores autenticados podem realizar esta ação.
      tags:
        - Admin
      parameters:
        - name: id
          in: path
          description: ID da empresa a ser deletada
          required: true
          schema:
            type: string
      responses:
        200:
          description: Empresa deletada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        404:
          description: Empresa não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Editar uma empresa
      description: Atualiza informações de uma empresa existente. Apenas administradores autenticados podem realizar esta ação.
      tags:
        - Admin
      parameters:
        - name: id
          in: path
          description: ID da empresa a ser atualizada
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmpresaInput'
      responses:
        200:
          description: Empresa atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        404:
          description: Empresa não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    
  /api/v1/auth/register:
    post:
      summary: Registrar uma nova empresa
      description: Registra uma nova empresa no sistema com email e senha. Retorna o token de autenticação.
      tags:
        - Empresas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        201:
          description: Empresa registrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        400:
          description: A empresa já existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/login:
    post:
      summary: Login de empresa
      description: Realiza login de uma empresa com email e senha. Retorna o token de autenticação.
      tags:
        - Empresas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        401:
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/profile/{id}:
    get:
      summary: Buscar empresa por ID
      description: Retorna os detalhes de uma empresa com base no ID fornecido.
      tags:
        - Empresas
      parameters:
        - name: id
          in: path
          description: ID da empresa
          required: true
          schema:
            type: string
      responses:
        200:
          description: Empresa encontrada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpresaResponse'
        404:
          description: Empresa não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Editar uma empresa
      description: Atualiza os dados de uma empresa. A autenticação é necessária.
      tags:
        - Empresas
      parameters:
        - name: id
          in: path
          description: ID da empresa a ser editada
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmpresaRequest'
      responses:
        200:
          description: Empresa atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmpresaResponse'
        404:
          description: Empresa não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Deletar uma empresa
      description: Deleta uma empresa do sistema. A autenticação é necessária.
      tags:
        - Empresas
      parameters:
        - name: id
          in: path
          description: ID da empresa a ser deletada
          required: true
          schema:
            type: string
      responses:
        204:
          description: Empresa deletada com sucesso
        404:
          description: Empresa não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/enterprises:
  get:
    summary: Listar empresas
    description: Retorna uma lista de empresas filtradas por tipo e paginadas.
    tags:
      - Empresas
    parameters:
      - in: query
        name: page
        description: Número da página a ser retornada.
        required: false
        schema:
          type: integer
          default: 1
      - in: query
        name: limit
        description: Número máximo de empresas por página.
        required: false
        schema:
          type: integer
          default: 10
      - in: query
        name: tipo
        description: Filtro para o tipo de empresa. Pode ser "contratante", "fornecedor" ou "ambos".
        required: false
        schema:
          type: string
          enum:
            - contratante
            - fornecedor
            - ambos
    responses:
      200:
        description: Lista de empresas com paginação
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: Página atual
                  example: 1
                totalPages:
                  type: integer
                  description: Número total de páginas
                  example: 3
                totalEmpresas:
                  type: integer
                  description: Número total de empresas
                  example: 30
                empresas:
                  type: array
                  items:
                    $ref: '#/components/schemas/Empresa'
      400:
        description: Parâmetros de consulta inválidos
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      500:
        description: Erro ao listar empresas
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
        
components:
  schemas:
    Empresa:
      type: object
      properties:
        _id:
          type: string
          description: ID da empresa
          example: "607d1f77bcf86cd7994f56c9"
        auth:
          type: object
          properties:
            nomeEmpresa:
              type: string
              description: Nome da empresa
              example: "Empresa Exemplo"
            email:
              type: string
              description: E-mail de contato da empresa
              example: "empresa@exemplo.com"
            password:
              type: string
              description: Senha de autenticação da empresa
              example: "senhaSecreta"
        tipoEmpresa:
          type: string
          enum:
            - contratante
            - fornecedor
            - ambos
          description: Tipo da empresa
          example: "contratante"
        telefoneEmpresa:
          type: string
          description: Número de telefone da empresa
          example: "(11) 1234-5678"
        endereco:
          type: object
          properties:
            cidade:
              type: string
              description: Cidade onde a empresa está localizada
              example: "São Paulo"
            UF:
              type: string
              description: Unidade federativa (estado)
              example: "SP"
            CEP:
              type: string
              description: Código postal
              example: "01001-000"
            logradouro:
              type: string
              description: Endereço da empresa
              example: "Rua Exemplo"
            numero:
              type: string
              description: Número do endereço
              example: "100"
            bairro:
              type: string
              description: Bairro onde a empresa está localizada
              example: "Centro"
            complemento:
              type: string
              description: Complemento do endereço
              example: "Sala 101"
        redesSociais:
          type: object
          properties:
            facebook:
              type: string
              description: URL do Facebook
              example: "https://facebook.com/empresaexemplo"
            instagram:
              type: string
              description: URL do Instagram
              example: "https://instagram.com/empresaexemplo"
            linkedin:
              type: string
              description: URL do LinkedIn
              example: "https://linkedin.com/company/empresaexemplo"
        servicos:
          type: array
          items:
            type: string
            description: IDs dos serviços que a empresa oferece
            example: ["607d1f77bcf86cd7994f56c9"]
        userImg:
          type: string
          description: URL da imagem de perfil da empresa
          example: "https://example.com/imagem.jpg"
        local:
          type: object
          properties:
            type:
              type: string
              description: Tipo de localização (por padrão "Point")
              example: "Point"
            coordinates:
              type: array
              items:
                type: number
              description: Coordenadas geográficas [longitude, latitude]
              example: [-46.633309, -23.550520]
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Mensagem de erro
          example: "Erro ao listar empresas"


  /messages:
    post:
      summary: Enviar uma mensagem entre empresas
      description: Envia uma mensagem de uma empresa para outra. A empresa de envio e de recebimento devem ser especificadas.
      tags:
        - Mensagens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnviarMensagemRequest'
      responses:
        201:
          description: Mensagem enviada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensagemResponse'
        500:
          description: Erro ao enviar a mensagem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /messages/{idEmpresa1}/{idEmpresa2}:
    get:
      summary: Buscar mensagens entre duas empresas
      description: Retorna todas as mensagens trocadas entre as duas empresas especificadas, ordenadas por data.
      tags:
        - Mensagens
      parameters:
        - name: idEmpresa1
          in: path
          description: ID da primeira empresa
          required: true
          schema:
            type: string
        - name: idEmpresa2
          in: path
          description: ID da segunda empresa
          required: true
          schema:
            type: string
      responses:
        200:
          description: Mensagens entre as duas empresas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MensagemResponse'
        500:
          description: Erro ao buscar as mensagens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /messages/ultima/{idEmpresa1}/{idEmpresa2}:
    get:
      summary: Buscar a última mensagem entre duas empresas
      description: Retorna a última mensagem trocada entre as duas empresas especificadas.
      tags:
        - Mensagens
      parameters:
        - name: idEmpresa1
          in: path
          description: ID da primeira empresa
          required: true
          schema:
            type: string
        - name: idEmpresa2
          in: path
          description: ID da segunda empresa
          required: true
          schema:
            type: string
      responses:
        200:
          description: Última mensagem entre as empresas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensagemResponse'
        500:
          description: Erro ao buscar a última mensagem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /servicos/{id}:
    get:
      summary: Buscar serviço por ID
      description: Retorna as informações de um serviço específico com base no ID fornecido.
      tags:
        - Serviços
      parameters:
        - name: id
          in: path
          description: ID do serviço
          required: true
          schema:
            type: string
      responses:
        200:
          description: Serviço encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicoResponse'
        404:
          description: Serviço não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Erro ao buscar serviço
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /empresas/{idEmpresa}/servicos:
    get:
      summary: Listar serviços da empresa
      description: Retorna todos os serviços de uma empresa específica com base no seu ID.
      tags:
        - Serviços
      parameters:
        - name: idEmpresa
          in: path
          description: ID da empresa
          required: true
          schema:
            type: string
      responses:
        200:
          description: Lista de serviços da empresa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServicoResponse'
        404:
          description: Empresa não encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Erro ao listar serviços da empresa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
